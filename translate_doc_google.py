# -*- coding: utf-8 -*-
"""translate_doc_google.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/tpetric7/language_models_workshop/blob/main/translate_doc_google.ipynb

# Translate Document with Google
"""

!pip install python-docx deep-translator

input_path = "/content/TESNIER3.docx"
output_path_first_half = "/content/TESNIER3_First_Half_Translated.docx"
output_path_second_half = "/content/TESNIER3_Second_Half_Translated.docx"

import os
print(os.path.exists(input_path))  # Should return True if the file exists
print(os.path.exists(output_path_first_half))
print(os.path.exists(output_path_second_half))

from docx import Document  # Import the Document class from python-docx
from deep_translator import GoogleTranslator  # Import GoogleTranslator for translations

# Function to translate text from German to English
def translate_text(text, source_lang="de", target_lang="en"):
    if text.strip():  # Only translate non-empty paragraphs
        return GoogleTranslator(source=source_lang, target=target_lang).translate(text)
    return text

# Load the input Word document
input_path = input_path  # Replace with your file path
doc = Document(input_path)

# Calculate the number of paragraphs
total_paragraphs = len(doc.paragraphs)
half_paragraphs = total_paragraphs // 2  # Define half the paragraphs

# Translate the first half
output_path_first_half = output_path_first_half  # Replace with your desired output path
translated_doc = Document()

for i in range(half_paragraphs):
    paragraph = doc.paragraphs[i].text
    translated_paragraph = translate_text(paragraph)  # Translate to English
    translated_doc.add_paragraph(translated_paragraph)

# Save the translated first half
translated_doc.save(output_path_first_half)

# Translate the second half
output_path_second_half = output_path_second_half  # Replace with your desired output path
translated_doc_second_half = Document()

for i in range(half_paragraphs, total_paragraphs):
    paragraph = doc.paragraphs[i].text
    translated_paragraph = translate_text(paragraph)  # Translate to English
    translated_doc_second_half.add_paragraph(translated_paragraph)

# Save the translated second half
translated_doc_second_half.save(output_path_second_half)

print("Translation completed. Files saved as:")
print(f"First half: {output_path_first_half}")
print(f"Second half: {output_path_second_half}")